package services;


import bri.Service;
import bri.ServiceRegistry;

import java.io.*;
import java.lang.reflect.Constructor;
import java.net.*;


public class ServiceAma implements Runnable {
	
	private Socket client;
	
	public ServiceAma(Socket socket) {
		client = socket;
	}

	public void run() {
		try {BufferedReader in = new BufferedReader (new InputStreamReader(client.getInputStream ( )));
			PrintWriter out = new PrintWriter (client.getOutputStream ( ), true);
			out.println(ServiceRegistry.toStringue()+"##Tapez le numÈro de service d√©sir√© :");
			int choix = Integer.parseInt(in.readLine());
			
			// instancier le service num√©ro "choix" en lui passant la socket "client"
			Class<? extends Service> classe = ServiceRegistry.getServiceClass(choix).getMaclasse();
			// invoquer run() pour cette instance ou la lancer dans un thread √† part 
		    Constructor<? extends Service> cons = classe.getConstructor(Socket.class);
		    //new Thread(cons.newInstance(this.client)).start();
			cons.newInstance(this.client).run();
			}
		catch (Exception e) {
			//Fin du service
		}

		//try {client.close();} catch (IOException e2) {}
	}
	
	protected void finalize() throws Throwable {
		 client.close(); 
	}

	// lancement du service
	public void start() {
		(new Thread(this)).start();		
	}

}
